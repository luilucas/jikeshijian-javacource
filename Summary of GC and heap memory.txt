总结：
1. Young GC/minor GC主要是针对年轻代的垃圾回收
2. 老年代满会触发Full GC/Major GC,并伴随年轻代的垃圾回收
3. 观察GC日志，进行多次Young GC后，存活的对象会晋升到老年代
4. 根据GC日志可以观察出每次GC前后年轻代的大小变化和整堆大小变化，可以计算出对象分配速率和回收速率，可以判断内存健康状态
5. GC日志可以提供每次GC所花费的时间
6. 堆内存越大，GC次数越少，但是每次GC的时间可能会变长
7. G1、CMS相对于串行和并行，有更短的垃圾回收时间，大内存的垃圾回收更好
8. JVM的性能影响：
    a.对象分配速率过快
	b.对象晋升过快
	c.GC暂停过长
	d.GC总时间过长
9.Jvm一些调优手段，善于分析垃圾回收日志
    a.适当增加堆内存大小
	b.选择适合的垃圾回收器
	c.减少业务代码中的使用对象大小
	d.修改其他的内存调优参数